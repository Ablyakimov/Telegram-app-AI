services:
  postgres:
    image: mirror.gcr.io/library/postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-app}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-app}
      - POSTGRES_DB=${POSTGRES_DB:-tg_ai_app}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    build:
      context: ./backend
      target: ${NODE_ENV:-development}
    image: tg-ai-backend:${NODE_ENV:-development}
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3001
      - DATABASE_URL=${DATABASE_URL:-postgres://app:app@postgres:5432/tg_ai_app}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-sk-test-your_openai_api_key_here}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4}
      - OPENAI_TEMPERATURE=${OPENAI_TEMPERATURE:-0.7}
      - OPENAI_MAX_TOKENS=${OPENAI_MAX_TOKENS:-1000}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-123456:TEST_TELEGRAM_BOT_TOKEN}
      - TELEGRAM_DEV_BYPASS=${TELEGRAM_DEV_BYPASS:-true}
      - CORS_ORIGIN=${CORS_ORIGIN:-https://24ablyakimov.ru}
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3001:3001"

  frontend:
    build:
      context: ./frontend
      target: ${NODE_ENV:-development}
    image: tg-ai-frontend:${NODE_ENV:-development}
    env_file:
      - .env
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-/api}
    networks:
      - app-network
    depends_on:
      - backend
    ports:
      - "5173:5173"

  # Nginx proxy (только для production)
  nginx:
    image: mirror.gcr.io/library/nginx:alpine
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    profiles:
      - production

volumes:
  pg_data:

networks:
  app-network:
    driver: bridge