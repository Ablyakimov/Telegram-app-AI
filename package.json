{
  "name": "tg-ai-app",
  "version": "1.0.1",
  "private": true,
  "workspaces": [
    "backend",
    "frontend"
  ],
  "scripts": {
    "backend:dev": "cd backend && npm run start:dev",
    "frontend:dev": "cd frontend && npm run dev",
    "dev": "concurrently \"npm:backend:dev\" \"npm:frontend:dev\"",
    "backend:build": "cd backend && npm run build",
    "frontend:build": "cd frontend && npm run build",
    "build": "npm-run-all --parallel backend:build frontend:build",
    "backend:start": "cd backend && npm run start:prod",
    "frontend:start": "cd frontend && npm run preview",
    "start": "concurrently \"npm:backend:start\" \"npm:frontend:start\"",
    "backend:lint": "cd backend && npm run lint",
    "frontend:lint": "cd frontend && npm run lint",
    "lint": "npm-run-all --parallel backend:lint frontend:lint",
    "backend:lint:fix": "cd backend && npm run lint:fix",
    "frontend:lint:fix": "cd frontend && npm run lint:fix",
    "lint:fix": "npm-run-all --parallel backend:lint:fix frontend:lint:fix",
    "tunnel:backend": "ngrok http 3001",
    "tunnel:frontend": "ngrok http 5173",
    "docker:dev": "NODE_ENV=development docker compose up -d",
    "docker:prod": "NODE_ENV=production docker compose up -d",
    "docker:build": "docker compose build",
    "docker:down": "docker compose down",
    "docker:logs": "docker compose logs -f",
    "docker:nginx": "docker compose --profile production up nginx -d"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "npm-run-all": "^4.1.5"
  }
}


